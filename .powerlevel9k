#!/usr/bin/env bash

# Powerlevel 9k Config
DEFAULT_USER=$(whoami)
POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir kubecontext vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs command_execution_time time)
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="$ "
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
POWERLEVEL9K_SHORTEN_STRATEGY=”truncate_from_right”

# See: http://nerdfonts.com
POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Uf6dc' # nf-mdi-drag_vertical
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Ue216' # nf-fae-slash
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Uf120' # nf-fa-angle_right
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\U23fd' # nf-iec-power_on
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Ufb73' # nf-mdi-bandcamp
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Uf6d8' # nf-mdi-dots_vertical
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Uf6da' # nf-mdi-drag
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Uf989' # nf-mdi-send
#POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR='\Uf44a' # nf-oct-triangle_right

POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=3
POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=2
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND="red"
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND="black"

POWERLEVEL9K_TIME_BACKGROUND="black"
POWERLEVEL9K_TIME_FOREGROUND="249"

#POWERLEVEL9K_DIR_SHOW_WRITABLE=true
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_BACKGROUND="black"
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND="red"
POWERLEVEL9K_DIR_HOME_BACKGROUND="black"
POWERLEVEL9K_DIR_HOME_FOREGROUND="249"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="black"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="249"
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND="black"
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="249"
POWERLEVEL9K_DIR_ETC_BACKGROUND="black"
POWERLEVEL9K_DIR_ETC_FOREGROUND="249"

POWERLEVEL9K_VCS_CLEAN_BACKGROUND="black"
POWERLEVEL9K_VCS_CLEAN_FOREGROUND="green"
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND="black"
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND="black"
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND="yellow"
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND="yellow"

#source /usr/local/opt/powerlevel9k/powerlevel9k.zsh-theme
# prompt_kubecontext() {
#   local kubectl_version="$(kubectl version --client 2>/dev/null)"
#   if [[ -n "$kubectl_version" ]]; then
#     local k8s_final_text="$(kubectl config view --minify=true -o jsonpath='{.contexts[0].context.cluster}/{.contexts[0].context.namespace}')"
#     "$1_prompt_segment" "$0" "$2" "black" "blue" "$k8s_final_text" "KUBERNETES_ICON"
#   fi
# }

source $(brew --prefix)/opt/powerlevel10k/powerlevel10k.zsh-theme

# override colors of powerlevel10k
prompt_kubecontext() {
  if ! _p9k_cache_stat_get $0 ${(s.:.)${KUBECONFIG:-$HOME/.kube/config}}; then
    local name namespace cluster user cloud_name cloud_account cloud_zone cloud_cluster text state
    () {
      local cfg && cfg=(${(f)"$(kubectl config view -o=yaml 2>/dev/null)"}) || return
      local ctx=(${(@M)cfg:#current-context: [^\"\'\|\>]*})
      (( $#ctx == 1 )) || return
      name=${ctx[1]#current-context: }
      local -i pos=${cfg[(i)contexts:]}
      (( pos <= $#cfg )) || return
      shift $pos cfg
      pos=${cfg[(i)  name: $name]}
      (( pos <= $#cfg )) || return
      (( --pos ))
      for ((; pos > 0; --pos)); do
        local line=$cfg[pos]
        if [[ $line == '- context:' ]]; then
          return 0
        elif [[ $line == (#b)'    cluster: '([^\"\'\|\>]*) ]]; then
          cluster=$match[1]
        elif [[ $line == (#b)'    namespace: '([^\"\'\|\>]*) ]]; then
          namespace=$match[1]
        elif [[ $line == (#b)'    user: '([^\"\'\|\>]*) ]]; then
          user=$match[1]
        fi
      done
    }
    if [[ -n $name ]]; then
      : ${namespace:=default}
      # gke_my-account_us-east1-a_cluster-01
      # gke_my-account_us-east1_cluster-01
      if [[ $cluster == (#b)gke_(?*)_(asia|australia|europe|northamerica|southamerica|us)-([a-z]##<->)(-[a-z]|)_(?*) ]]; then
        cloud_name=gke
        cloud_account=$match[1]
        cloud_zone=$match[2]-$match[3]-$match[4]
        cloud_cluster=$match[5]
        if (( ${_POWERLEVEL9K_KUBECONTEXT_SHORTEN[(I)gke]} )); then
          text=$cloud_cluster
        fi
      # arn:aws:eks:us-east-1:123456789012:cluster/cluster-01
      elif [[ $cluster == (#b)arn:aws:eks:([[:alnum:]-]##):([[:digit:]]##):cluster/(?*) ]]; then
        cloud_name=eks
        cloud_zone=$match[1]
        cloud_account=$match[2]
        cloud_cluster=$match[3]
        if (( ${_POWERLEVEL9K_KUBECONTEXT_SHORTEN[(I)eks]} )); then
          text=$cloud_cluster
        fi
      fi
      if [[ -z $text ]]; then
        text=$name
        if [[ $_POWERLEVEL9K_KUBECONTEXT_SHOW_DEFAULT_NAMESPACE == 1 || $namespace != (default|$name) ]]; then
          text+="/$namespace"
        fi
      fi
      local pat class
      for pat class in "${_POWERLEVEL9K_KUBECONTEXT_CLASSES[@]}"; do
        if [[ $text == ${~pat} ]]; then
          [[ -n $class ]] && state=_${(U)class}
          break
        fi
      done
    fi
    _p9k_cache_stat_set "$name" "$namespace" "$cluster" "$user" "$cloud_name" "$cloud_account" "$cloud_zone" "$cloud_cluster" "$text" "$state"
  fi

  typeset -g P9K_KUBECONTEXT_NAME=$_p9k__cache_val[1]
  typeset -g P9K_KUBECONTEXT_NAMESPACE=$_p9k__cache_val[2]
  typeset -g P9K_KUBECONTEXT_CLUSTER=$_p9k__cache_val[3]
  typeset -g P9K_KUBECONTEXT_USER=$_p9k__cache_val[4]
  typeset -g P9K_KUBECONTEXT_CLOUD_NAME=$_p9k__cache_val[5]
  typeset -g P9K_KUBECONTEXT_CLOUD_ACCOUNT=$_p9k__cache_val[6]
  typeset -g P9K_KUBECONTEXT_CLOUD_ZONE=$_p9k__cache_val[7]
  typeset -g P9K_KUBECONTEXT_CLOUD_CLUSTER=$_p9k__cache_val[8]
  [[ -n $_p9k__cache_val[9] ]] || return
  _p9k_prompt_segment $0$_p9k__cache_val[10] black blue KUBERNETES_ICON 0 '' "${_p9k__cache_val[9]//\%/%%}"
}